"";"string to integer";"string to long integer";"string to floating point";"integer to string";"floating point to string"
"Ada[1]";"Integer'Value (string_expression)";"Long_Integer'Value (string_expression)";"Float'Value (string_expression)";"Integer'Image (integer_expression)";"Float'Image (float_expression)"
"ALGOL 68 with general, and then specific formats";"With prior declarations and association of: string buf := ""12345678.9012e34 ""; file proxy; associate(proxy, buf);";"With prior declarations and association of: string buf := ""12345678.9012e34 ""; file proxy; associate(proxy, buf);";"With prior declarations and association of: string buf := ""12345678.9012e34 ""; file proxy; associate(proxy, buf);";"With prior declarations and association of: string buf := ""12345678.9012e34 ""; file proxy; associate(proxy, buf);";"With prior declarations and association of: string buf := ""12345678.9012e34 ""; file proxy; associate(proxy, buf);"
"ALGOL 68 with general, and then specific formats";"get(proxy, ivar);";"get(proxy, livar);";"get(proxy, rvar);";"put(proxy, ival);";"put(proxy, rval);"
"ALGOL 68 with general, and then specific formats";"getf(proxy, ($g$, ivar)); or getf(proxy, ($dddd$, ivar));";"getf(proxy, ($g$, livar)); or getf(proxy, ($8d$, livar));";"getf(proxy, ($g$, rvar)); or getf(proxy, ($8d.4dE2d$, rvar));";"putf(proxy, ($g$, ival)); or putf(proxy, ($4d$, ival));";"putf(proxy, ($g(width, places, exp)$, rval)); or putf(proxy, ($8d.4dE2d$, rval));"
"ALGOL 68 with general, and then specific formats";"APL";"⍎string_expression";"⍎string_expression";"⍎string_expression";"⍕integer_expression"
"ALGOL 68 with general, and then specific formats";"C (C99)";"integer = atoi(string);";"long = atol(string);";"float = atof(string);";"sprintf(string, ""%i"", integer);"
"ALGOL 68 with general, and then specific formats";"Objective-C";"integer = [string intValue];";"long = [string longLongValue];";"float = [string doubleValue];";"string = [NSString stringWithFormat:@""%i"", integer];"
"ALGOL 68 with general, and then specific formats";"C++ (STL)";"«std::»istringstream(string) >> number;";"«std::»istringstream(string) >> number;";"«std::»istringstream(string) >> number;";"«std::»ostringstream o; o << number; string = o.str();";"«std::»ostringstream o; o << number; string = o.str();"
"ALGOL 68 with general, and then specific formats";"C++11";"integer = «std::»stoi(string);";"long = «std::»stol(string);";"float = «std::»stof(string); double = «std::»stod(string);";"string = «std::»to_string(number);";"string = «std::»to_string(number);"
"ALGOL 68 with general, and then specific formats";"C#";"integer = int.Parse(string);";"long = long.Parse(string);";"float = float.Parse(string); double = double.Parse(string);";"string = number.ToString();";"string = number.ToString();"
"ALGOL 68 with general, and then specific formats";"D";"integer = std.conv.to!int(string)";"long = std.conv.to!long(string)";"float = std.conv.to!float(string) double = std.conv.to!double(string)";"string = std.conv.to!string(number)";"string = std.conv.to!string(number)"
"ALGOL 68 with general, and then specific formats";"Java";"integer = Integer.parseInt(string);";"long = Long.parseLong(string);";"float = Float.parseFloat(string); double = Double.parseDouble(string);";"string = Integer.toString(integer); string = String.valueOf(integer);"
"ALGOL 68 with general, and then specific formats";"JavaScript[a]";"integer = parseInt(string);";"integer = parseInt(string);";"float = parseFloat(string); float = new Number (string); float = Number (string); float = +string;";"string = number.toString (); string = String (number); string = number+""""; string = `${number}`";"string = number.toString (); string = String (number); string = number+""""; string = `${number}`"
"ALGOL 68 with general, and then specific formats";"Go";"integer, error = strconv.Atoi(string) integer, error = strconv.ParseInt(string, 10, 0)";"long, error = strconv.ParseInt(string, 10, 64)";"float, error = strconv.ParseFloat(string, 64)";"string = strconv.Itoa(integer) string = strconv.FormatInt(integer, 10) string = fmt.Sprint(integer)"
"ALGOL 68 with general, and then specific formats";"Rust[d]";"string.parse::<i32>() i32::from_str(string)";"string.parse::<i64>() i64::from_str(string)";"string.parse::<f64>() f64::from_str(string)";"integer.to_string()"
"ALGOL 68 with general, and then specific formats";"Common Lisp";"(setf integer (parse-integer string))";"(setf integer (parse-integer string))";"(setf float (read-from-string string))";"(setf string (princ-to-string number))";"(setf string (princ-to-string number))"
"ALGOL 68 with general, and then specific formats";"Scheme";"(define number (string->number string))";"(define number (string->number string))";"(define number (string->number string))";"(define string (number->string number))";"(define string (number->string number))"
"ALGOL 68 with general, and then specific formats";"ISLISP";"(setf integer (convert string <integer>))";"(setf integer (convert string <integer>))";"(setf float (convert string <float>))";"(setf string (convert number <string>))";"(setf string (convert number <string>))"
"ALGOL 68 with general, and then specific formats";"Pascal";"integer := StrToInt(string);";"";"float := StrToFloat(string);";"string := IntToStr(integer);"
"ALGOL 68 with general, and then specific formats";"Visual Basic";"integer = CInt(string)";"long = CLng(string)";"float = CSng(string) double = CDbl(string)";"string = CStr(number)"
"ALGOL 68 with general, and then specific formats";"Visual Basic .NET (can use both VB syntax above and .NET methods shown right)";"integer = Integer.Parse(string)";"long = Long.Parse(string)";"float = Single.Parse(string) double = Double.Parse(string)";"string = number.ToString()";"string = number.ToString()"
"ALGOL 68 with general, and then specific formats";"Xojo";"integer = Val(string)";"long = Val(string)";"double = Val(string) double = CDbl(string)";"string = CStr(number) or string = Str(number)";"string = CStr(number) or string = Str(number)"
"ALGOL 68 with general, and then specific formats";"Python";"integer = int(string)";"long = long(string)";"float = float(string)";"string = str(number)";"string = str(number)"
"ALGOL 68 with general, and then specific formats";"S-Lang";"integer = atoi(string);";"long = atol(string);";"float = atof(string);";"string = string(number);";"string = string(number);"
"ALGOL 68 with general, and then specific formats";"Fortran";"READ(string,format) number";"READ(string,format) number";"READ(string,format) number";"WRITE(string,format) number";"WRITE(string,format) number"
"ALGOL 68 with general, and then specific formats";"PHP";"integer = intval(string); or integer = (int)string;";"integer = intval(string); or integer = (int)string;";"float = floatval(string); float = (float)string;";"string = ""$number""; or string = strval(number); or string = (string)number;";"string = ""$number""; or string = strval(number); or string = (string)number;"
"ALGOL 68 with general, and then specific formats";"Perl[b]";"number = 0 + string;";"number = 0 + string;";"number = 0 + string;";"string = ""number"";";"string = ""number"";"
"ALGOL 68 with general, and then specific formats";"Raku";"number = +string;";"number = +string;";"number = +string;";"string = ~number;";"string = ~number;"
"ALGOL 68 with general, and then specific formats";"Ruby";"integer = string.to_i or integer = Integer(string)";"integer = string.to_i or integer = Integer(string)";"float = string.to_f float = Float(string)";"string = number.to_s";"string = number.to_s"
"ALGOL 68 with general, and then specific formats";"Scala";"integer = string.toInt";"long = string.toLong";"float = string.toFloat double = string.toDouble";"string = number.toString";"string = number.toString"
"ALGOL 68 with general, and then specific formats";"Smalltalk";"integer := Integer readFrom: string";"integer := Integer readFrom: string";"float := Float readFrom: string";"string := number asString";"string := number asString"
"ALGOL 68 with general, and then specific formats";"Windows PowerShell";"integer = [int]string";"long = [long]string";"float = [float]string";"string = [string]number; or string = ""number""; or string = (number).ToString()";"string = [string]number; or string = ""number""; or string = (number).ToString()"
"ALGOL 68 with general, and then specific formats";"OCaml";"let integer = int_of_string string";"";"let float = float_of_string string";"let string = string_of_int integer"
"ALGOL 68 with general, and then specific formats";"F#";"let integer = int string";"let integer = int64 string";"let float = float string";"let string = string number";"let string = string number"
"ALGOL 68 with general, and then specific formats";"Standard ML";"val integer = Int.fromString string";"";"val float = Real.fromString string";"val string = Int.toString integer"
"ALGOL 68 with general, and then specific formats";"Haskell (GHC)";"number = read string";"number = read string";"number = read string";"string = show number";"string = show number"
"ALGOL 68 with general, and then specific formats";"COBOL";"MOVE «FUNCTION» NUMVAL(string)[c] TO number";"MOVE «FUNCTION» NUMVAL(string)[c] TO number";"MOVE «FUNCTION» NUMVAL(string)[c] TO number";"MOVE number TO numeric-edited";"MOVE number TO numeric-edited"
