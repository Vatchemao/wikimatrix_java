"";"Simple composite types Records";"Simple composite types Tuple expression";"Algebraic data types";"Unions"
"Ada[1]";"type identifier is «abstract» «tagged» «limited» [record fieldname1 : type; fieldname2 : type; ... end record |null record]";"N/A";"Any combination of records, unions and enumerations (as well as references to those, enabling recursive types).";"type identifier (variation : discrete_type) is record case variation is when choice_list1 => fieldname1 : type; ... when choice_list2 => fieldname2 : type; ... ...end case;end record"
"ALGOL 68";"struct (modename «fieldname», ...);";"Required types and operators can be user defined";"Required types and operators can be user defined";"union (modename, ...);"
"C (C99)";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Objective-C";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"C++";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"C#";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Java";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"JavaScript";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"D";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Go";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Rust";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Swift";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Common Lisp";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Scheme";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"ISLISP";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Pascal";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Visual Basic";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Visual Basic .NET";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Python";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"S-Lang";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Fortran";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"PHP";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Perl";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Raku";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Ruby";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Scala";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Windows PowerShell";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"OCaml";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"F#";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Standard ML";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"Haskell";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
"COBOL";"struct «name» {type name;...};";"N/A";"N/A";"union {type name;...};"
